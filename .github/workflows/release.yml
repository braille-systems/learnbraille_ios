name: Release

on:
  push:
    tags:
      - 'v*.*'

jobs:
  artifact_android:
    name: Build Android artifact
    runs-on: ubuntu-latest

    steps:
       # Git checkout wit lfs caching
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}-v1

      # Setup flutter from stable and java 11
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - uses: actions/setup-java@v1
        with:
          java-version: '11.x'

      # Setup env and build
      - run: git lfs pull
      - run: flutter pub get
        working-directory: ./braille_abc
      - run: flutter build apk --release --no-tree-shake-icons
        working-directory: ./braille_abc
      
      # Upload apk artifact
      - uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: braille_abc/build/app/outputs/apk/release/app-release.apk


  release:
    name: Create release
    runs-on: ubuntu-latest
    needs: [artifact_android]

    steps:
      # Git checkout without lfs
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      # Download artifact from previous job
      - uses: actions/download-artifact@v1
        with:
          name: release-apk

      - name: Get current tag name
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      # Create release
      - uses: softprops/action-gh-release@v1
        with:
          name: Learn Braille IOS ${{ env.RELEASE_VERSION }}
          files: |
            LICENSE
            release-apk/app-release.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
