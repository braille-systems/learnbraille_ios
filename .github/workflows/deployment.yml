name: Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:


jobs:
  lint:
    name: Analyzer
    runs-on: ubuntu-latest
    env:
      FLUTTER_VERSION: '2.5.1'

    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Get flutter from stable
        uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'any'

      - name: Setup flutter env
        run: flutter pub get
        working-directory: ./braille_abc

      - name: Run static analyzer
        run: flutter analyze
        working-directory: ./braille_abc


  build_ios:
    name: IOS build
    runs-on: macos-latest
    needs: [lint]

    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Get flutter from stable
        uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ jobs.lint.env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Setup flutter env
        run: flutter pub get
        working-directory: ./braille_abc

      - name: Build
        run: flutter build ios --release --no-codesign --no-tree-shake-icons
        working-directory: ./braille_abc


  build_android:
    name: Android build
    runs-on: ubuntu-latest
    needs: [lint]

    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Get flutter from stable
        uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ jobs.lint.env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Get java 11
        uses: actions/setup-java@v1
        with:
          java-version: '11.x'

      - name: Setup flutter env
        run: flutter pub get
        working-directory: ./braille_abc

      - name: Setup signing key and key.properties
        run: |
          echo "$ANDROID_UPLOAD_KEY_SERIALIZED" | base64 --decode > braille_abc/android/upload-keystore.jks
          echo "storePassword=$ANDROID_UPLOAD_PASSWORD
          keyPassword=$ANDROID_UPLOAD_PASSWORD
          keyAlias=upload
          storeFile=$(pwd)/braille_abc/android/upload-keystore.jks" > braille_abc/android/key.properties
        env:
          ANDROID_UPLOAD_KEY_SERIALIZED: ${{ secrets.ANDROID_UPLOAD_KEY_SERIALIZED }}
          ANDROID_UPLOAD_PASSWORD: ${{ secrets.ANDROID_UPLOAD_PASSWORD }}

      - name: Build
        run: flutter build appbundle --no-tree-shake-icons
        working-directory: ./braille_abc


  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [build_android, build_ios]

    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Get flutter from stable
        uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ jobs.lint.env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Setup flutter env
        run: flutter pub get
        working-directory: ./braille_abc

      - name: Test
        run: flutter test
        working-directory: ./braille_abc


  deploy_testflight:
    name: Deploy to TestFlight
    runs-on: macos-latest
    needs: [test]

    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Get flutter from stable
        uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ jobs.lint.env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Get java 11
        uses: actions/setup-java@v1
        with:
          java-version: '11.x'

      - name: Get Ruby 2.7
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7

      - name: Setup flutter env
        run: flutter pub get
        working-directory: ./braille_abc

      - name: Setup fastlane
        run: bundle install
        working-directory: ./braille_abc/ios

      - name: Install pods
        run: pod install
        working-directory: ./braille_abc/ios

      - name: Setup SSH Keys and known_hosts for match
        run: |
          SSH_PATH="$HOME/.ssh"
          mkdir -p "$SSH_PATH"
          touch "$SSH_PATH/known_hosts"

          echo "$PRIVATE_KEY" > "$SSH_PATH/id_ed25519"

          chmod 700 "$SSH_PATH"
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 600 "$SSH_PATH/known_hosts"
          chmod 600 "$SSH_PATH/id_ed25519"

          eval $(ssh-agent)
          ssh-add "$SSH_PATH/id_ed25519"
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy
        run: bundle exec fastlane beta
        working-directory: ./braille_abc/ios
        env:
          TEAM_ID: ${{ secrets.TEAM_ID }}
          ITC_TEAM_ID: ${{ secrets.ITC_TEAM_ID }}
          FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
          FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_KEYCHAIN_NAME: ${{ secrets.MATCH_KEYCHAIN_NAME }}
          MATCH_KEYCHAIN_PASSWORD: ${{ secrets.MATCH_KEYCHAIN_PASSWORD }}
          DELIVER_ITMSTRANSPORTER_ADDITIONAL_UPLOAD_PARAMETERS: ${{ secrets.DELIVER_ITMSTRANSPORTER_ADDITIONAL_UPLOAD_PARAMETERS }}
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_API_ISSUER_ID: ${{ secrets.APPLE_API_ISSUER_ID }}
          APPLE_API_KEY: ${{ secrets.APPLE_API_KEY }}


  deploy_googple_play_internal:
    name: Deploy to Google Play internal testing
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Get flutter from stable
        uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ jobs.lint.env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Get java 11
        uses: actions/setup-java@v1
        with:
          java-version: '11.x'

      - name: Get Ruby 2.7
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7

      - name: Setup flutter env
        run: flutter pub get
        working-directory: ./braille_abc

      - name: Setup fastlane
        run: bundle install
        working-directory: ./braille_abc/android

      - name: Setup signing key and key.properties
        run: |
          echo "$ANDROID_UPLOAD_KEY_SERIALIZED" | base64 --decode > braille_abc/android/upload-keystore.jks
          echo "storePassword=$ANDROID_UPLOAD_PASSWORD
          keyPassword=$ANDROID_UPLOAD_PASSWORD
          keyAlias=upload
          storeFile=$(pwd)/braille_abc/android/upload-keystore.jks" > braille_abc/android/key.properties
        env:
          ANDROID_UPLOAD_KEY_SERIALIZED: ${{ secrets.ANDROID_UPLOAD_KEY_SERIALIZED }}
          ANDROID_UPLOAD_PASSWORD: ${{ secrets.ANDROID_UPLOAD_PASSWORD }}

      - name: Build
        run: flutter build appbundle --no-tree-shake-icons
        working-directory: ./braille_abc

      - name: Deploy
        run: bundle exec fastlane internal
        working-directory: ./braille_abc/android
        env:
          ANDROID_JSON_KEY_DATA: ${{ secrets.ANDROID_JSON_KEY_DATA }}
