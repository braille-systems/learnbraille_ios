name: Flutter CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Run flutter analyze
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'

      - run: flutter pub get
        working-directory: ./braille_abc
      - run: flutter analyze
        working-directory: ./braille_abc


  build_ios:
    name: Build with Flutter for IOS
    runs-on: macos-latest
    needs: [lint]

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true 
      
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}-v1

      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      
      - run: git lfs pull
      - run: flutter pub get
        working-directory: ./braille_abc
      - run: flutter build ios --release --no-codesign --no-tree-shake-icons
        working-directory: ./braille_abc


  build_android:
    name: Build with Flutter for Android
    runs-on: ubuntu-latest
    needs: [lint]

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}-v1
          
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - uses: actions/setup-java@v1
        with:
          java-version: '11.x'

      - run: git lfs pull
      - run: flutter pub get
        working-directory: ./braille_abc
      - run: flutter build apk --release --no-tree-shake-icons
        working-directory: ./braille_abc
      
      - uses: actions/upload-artifact@v1
        with:
          name: build-apk
          path: braille_abc/build/app/outputs/apk/release/app-release.apk


  deploy_testflight:
    name: Deploy to IOS TestFlight
    runs-on: macos-latest
    needs: [build_ios, build_android]

    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true 
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - uses: actions/setup-java@v1
        with:
          java-version: '11.x'

      - run: bundle install
        working-directory: ./braille_abc/ios
      - run: flutter pub get
        working-directory: ./braille_abc
#      - run: pod install
#        working-directory: ./braille_abc/ios

      - name: Setup SSH Keys and known_hosts for fastlane match
        run: |
          SSH_PATH="$HOME/.ssh"
          mkdir -p "$SSH_PATH"
          touch "$SSH_PATH/known_hosts"
          
          echo "stage one"
          echo "$PRIVATE_KEY" > "$SSH_PATH/id_ed25519"
          
          echo "stage two"
          chmod 700 "$SSH_PATH"
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 600 "$SSH_PATH/known_hosts"
          chmod 600 "$SSH_PATH/id_ed25519"
          
          echo "stage three"
          eval $(ssh-agent)
          ssh-add "$SSH_PATH/id_ed25519"
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: Deploy to TestFlight
        run: bundle exec fastlane beta
        working-directory: ./braille_abc/ios
        env:
          TEAM_ID: ${{ secrets.TEAM_ID }}
          ITC_TEAM_ID: ${{ secrets.ITC_TEAM_ID }}
          FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
          FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_KEYCHAIN_NAME: ${{ secrets.MATCH_KEYCHAIN_NAME }}
          MATCH_KEYCHAIN_PASSWORD: ${{ secrets.MATCH_KEYCHAIN_PASSWORD }}
          DELIVER_ITMSTRANSPORTER_ADDITIONAL_UPLOAD_PARAMETERS: ${{ secrets.DELIVER_ITMSTRANSPORTER_ADDITIONAL_UPLOAD_PARAMETERS }}
